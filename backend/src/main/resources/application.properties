# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration - MySQL Setup
spring.datasource.url=jdbc:mysql://localhost:3306/sanekey_store?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&connectTimeout=60000&socketTimeout=60000
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Alternative configuration for XAMPP/WAMP (port 3306)
# spring.datasource.url=jdbc:mysql://localhost:3306/sanekey_store?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true

# Alternative configuration for custom MySQL setup (port 3307)
# spring.datasource.url=jdbc:mysql://localhost:3307/sanekey_store?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
# spring.datasource.password=nithin123

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Database initialization
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# JWT Configuration
sanekey.app.jwtSecret=sanekeySecretKey123456789012345678901234567890123456789012345678901234567890
sanekey.app.jwtExpirationMs=86400000

# Stripe Configuration (will work without keys for testing)
stripe.secret.key=${STRIPE_SECRET_KEY:}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:}

# PayPal Configuration (will work without keys for testing)
paypal.client.id=${PAYPAL_CLIENT_ID:}
paypal.client.secret=${PAYPAL_CLIENT_SECRET:}
paypal.environment=${PAYPAL_ENVIRONMENT:sandbox}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.com.sanekey=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=INFO
logging.level.org.springframework.jdbc=DEBUG

# CORS Configuration
cors.allowed.origins=http://localhost:3000,http://localhost:5173,http://localhost:5174,*

# Session Management
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.timeout=30m

# Application Configuration
app.name=Sanekey Store
app.version=1.0.0
app.description=E-commerce platform for fashion and accessories

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# Health check endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always